services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - elasticsearch
    restart: on-failure
    volumes:
      - ./data/:/app/data/
    networks:
      - app_network

  nginx:
    build: ./nginx
    container_name: nginx-logs-app
    depends_on:
      - grafana
      - backend
      - elasticsearch
      - postgres
    ports:
      - "8080:80"
    networks:
      - app_network

  postgres:
    build: ./postgres
    container_name: postgres-logs-app
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: logs_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  elasticsearch:
    build: ./elasticsearch
    container_name: elasticsearch-log-app
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - app_network

  grafana:
    image: grafana/grafana
    container_name: log-grafana
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    restart: unless-stopped
    environment:
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432 
      - GF_DATABASE_NAME=logs_db
      - GF_DATABASE_USER=user
      - GF_DATABASE_PASSWORD=pass
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      # - ./data/logs: add log path ??
    networks:
      - app_network

volumes:
  postgres_data:
  esdata:

networks:
  app_network:
    driver: bridge
